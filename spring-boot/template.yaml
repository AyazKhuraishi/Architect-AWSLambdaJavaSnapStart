AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWSLambdaSpringBootJavaSnapStartTest
  Sample SAM Template 

Parameters:
  Stage:
    Type: String
    Default: prod
    
Globals:
  Function:
    Handler: software.amazonaws.example.product.handler.StreamLambdaHandler::handleRequest
    CodeUri: target/aws-spring-boot-lambda-snap-start-1.0.0-SNAPSHOT.jar
    Runtime: java11
    Timeout: 30 
    MemorySize: 1024
    Environment:
      Variables:
        JAVA_TOOL_OPTIONS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"
        PRODUCT_TABLE_NAME: !Ref ProductsTable

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Name: AWSLambdaSpringBootJavaSnapStartAPI
      Description: Api for AWSLambdaSpringBootJavaSnapStart
      Auth:
        ApiKeyRequired: true  # sets for all methods

  MyApiUsagePlan:
     Type: AWS::ApiGateway::UsagePlan
     DependsOn:  
        - MyApiStage
     Properties:
      ApiStages: 
        - ApiId: !Ref MyApi
          Stage: !Ref Stage
      UsagePlanName: AWSLambdaSpringBootJavaSnapStartAPIUsagePlan
      Description: Usage plan for AWSLambdaSpringBootJavaSnapStartAPI
      Quota:
          Limit: 500
          Period: DAY
      Throttle:
          RateLimit:  1000
          BurstLimit: 5000   

  MyApiKey: 
    Type: AWS::ApiGateway::ApiKey
    DependsOn:  
       - MyApiStage
    Properties: 
      Name: "AWSLambdaSpringBootJavaSnapStartApiKey"
      Description: "AWSLambdaSpringBootJavaSnapStart API Key"
      Enabled: true
      GenerateDistinctId: false
      Value: a6ZbcDefQW12BN56WEM2
      StageKeys:
        - RestApiId: !Ref MyApi
          StageName: !Ref Stage

  MyApiUsagePlanKey:
      Type: "AWS::ApiGateway::UsagePlanKey"
      DependsOn: 
      - MyApi
      Properties:
        KeyId: !Ref MyApiKey
        KeyType: API_KEY
        UsagePlanId: !Ref MyApiUsagePlan

 
  GetProductByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetProductByIdWithSpringBoot
      AutoPublishAlias: liveVersion
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ProductsTable
      Events:
        GetRequestById:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /products/{id}
            Method: get            

  GetProductByIdFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${GetProductByIdFunction}"
      RetentionInDays: 7

 
  PutProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PutProductWithSpringBoot
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Events:
        PutRequest:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /products/{id}
            Method: put

  PutProductFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${PutProductFunction}"
      RetentionInDays: 7

  ProductsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "AWSLambdaSpringBootJavaSnapStartProductsTable"
      PointInTimeRecoverySpecification:
         PointInTimeRecoveryEnabled: true
      AttributeDefinitions:
        - AttributeName: 'PK'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'PK'
          KeyType: 'HASH'
      ProvisionedThroughput: 
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"
      

Outputs:
  AWSLambdaJavaSpringBootSnapStartApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage for AWS Lambda Java Snap Start"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/prod/products"
